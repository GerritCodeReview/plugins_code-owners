{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "245ca5b6_9b801771",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-01-12T13:49:53Z",
      "side": 1,
      "message": "David, maybe you have can idea how to do this?\n\nThe newly added test with the unicode filename succeeds when I run it in Eclipse, but it fails when I run it from command-line with Bazel.\n\nThe failure is caused by:\njava.nio.file.InvalidPathException: Malformed input or input contains unmappable characters: /unicode/Ã¤Ã¶Ã¼/ðŸ¥¤.txt\n\tat java.base/sun.nio.fs.UnixPath.encode(UnixPath.java:145)\n\tat java.base/sun.nio.fs.UnixPath.\u003cinit\u003e(UnixPath.java:69)\n\tat java.base/sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:279)\n\tat java.base/java.nio.file.Path.of(Path.java:147)\n\tat java.base/java.nio.file.Paths.get(Paths.java:69)\n\tat com.google.gerrit.plugins.codeowners.api.CodeOwners$QueryRequest.get(CodeOwners.java:69)\n        ...\n\nIf I understand [1,2] correctly, I need to set -Dfile.encoding\u003dUTF-8 and maybe also -Dsun.jnu.encoding\u003dUTF-8 to make this work. I tried doing this via:\n\nbazel test //plugins/code-owners/... --jvmopt\u003d\"-Dsun.jnu.encoding\u003dUTF-8\" --jvmopt\u003d\"-Dfile.encoding\u003dUTF-8\"\n\nbut it\u0027s still failing with the same exception.\n\nDo you have an idea about this?\n\n[1] https://stackoverflow.com/questions/39185613/java-nio-file-invalidpathexception-malformed-input-or-input-contains-unmappable\n[2] https://stackoverflow.com/questions/361975/setting-the-default-java-character-encoding\n",
      "revId": "8f81a650c0021381d00fffcb0b7c7d9e0e8917c6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e8344ec_87f22be0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-01-12T14:16:04Z",
      "side": 1,
      "message": "That sounds familiar, check these issues: [1], [2]. I also saw the similar failures in JGit.\nCan you run test in JGit repository with bazel?\n\n  $ bazel test //...\n\nI would suggest to extract reproducer and add your case to the existing bazel issue.\n\n[1] https://github.com/bazelbuild/bazel/issues/2705\n[2] https://github.com/bazelbuild/bazel/issues/2550\n",
      "revId": "8f81a650c0021381d00fffcb0b7c7d9e0e8917c6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99715b0c_5348410d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-01-12T14:17:21Z",
      "side": 1,
      "message": "I confirmed that Charset.defaultCharset().displayName() is UTF-8 when I run it from Eclipse and US-ASCII when I run it from Bazel.\n\nI think we actually do not want to set/override the default charset via system properties, but in the code we should rather create java.nio.Path objects with UTF-8, but no idea yet how to do this :/",
      "parentUuid": "245ca5b6_9b801771",
      "revId": "8f81a650c0021381d00fffcb0b7c7d9e0e8917c6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1520d13a_5cc288b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-01-12T14:29:24Z",
      "side": 1,
      "message": "Apparently I added -Dfile.encoding\u003dUTF-8 to JGit Bazel build from day one: [1].\n\n[1] https://git.eclipse.org/r/c/jgit/jgit/+/93346/10/org.eclipse.jgit.test/tests.bzl#50",
      "parentUuid": "99715b0c_5348410d",
      "revId": "8f81a650c0021381d00fffcb0b7c7d9e0e8917c6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16b31168_22630f22",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-01-12T14:33:37Z",
      "side": 1,
      "message": "Thanks for the pointers!\nI wish we could avoid setting these system properties. I\u0027m asking myself why there is no Paths.get(path, \"UTF-8\") method...",
      "parentUuid": "9e8344ec_87f22be0",
      "revId": "8f81a650c0021381d00fffcb0b7c7d9e0e8917c6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4faeda2f_ec690a37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-01-12T14:33:37Z",
      "side": 1,
      "message": "Nice, is there a similar place in Gerrit where we could add this?",
      "parentUuid": "1520d13a_5cc288b9",
      "revId": "8f81a650c0021381d00fffcb0b7c7d9e0e8917c6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89a9db2e_6b2c44f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-01-12T14:48:11Z",
      "side": 1,
      "message": "I tried adding this in:\n\n  --- a/javatests/com/google/gerrit/acceptance/tests.bzl\n  +++ b/javatests/com/google/gerrit/acceptance/tests.bzl\n  @@ -4,7 +4,7 @@ def acceptance_tests(\n           group,\n           deps \u003d [],\n           labels \u003d [],\n  -         vm_args \u003d [\"-Xmx256m\"],\n  +        vm_args \u003d [\"-Xmx256m\", \"-Dfile.encoding\u003dUTF-8\", \"-Dsun.jnu.encoding\u003dUTF-8\"],\n           **kwargs):\n       junit_tests(\n           name \u003d group,\n\nbut it didn\u0027t help.",
      "parentUuid": "4faeda2f_ec690a37",
      "revId": "8f81a650c0021381d00fffcb0b7c7d9e0e8917c6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ab98852_42836852",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-01-12T14:54:41Z",
      "side": 1,
      "message": "hmm, that\u0027s weird Charset.defaultCharset().displayName() is UTF-8 now, but the test fails with the same exception anyway *confused*",
      "parentUuid": "89a9db2e_6b2c44f5",
      "revId": "8f81a650c0021381d00fffcb0b7c7d9e0e8917c6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4588ce78_e812f7e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-01-12T15:01:29Z",
      "side": 1,
      "message": "Yes, you could even change it in plugin itself:\n\n  diff --git a/javatests/com/google/gerrit/plugins/codeowners/acceptance/api/BUILD b/javatests/com/google/gerrit/plugins/codeowners/acceptance/api/BUILD\nindex cccf418..4843349 100644\n--- a/javatests/com/google/gerrit/plugins/codeowners/acceptance/api/BUILD\n+++ b/javatests/com/google/gerrit/plugins/codeowners/acceptance/api/BUILD\n@@ -6,6 +6,7 @@ package(\n )\n \n [acceptance_tests(\n+    vm_args \u003d [\"-Dfile.encoding\u003dUTF-8\", \"-Dsun.jnu.encoding\u003dUTF-8\"],\n     srcs \u003d [f],\n     group \u003d f[:f.index(\".\")],\n     deps \u003d [\n\n\nI did it too and I confirm that this test is still failing. Apparently something is still wrong. We should extract small reproducer test/program.",
      "parentUuid": "6ab98852_42836852",
      "revId": "8f81a650c0021381d00fffcb0b7c7d9e0e8917c6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a14360a_3fb210af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-01-13T08:46:36Z",
      "side": 1,
      "message": "David, thanks a lot for this discussion. This was very helpful!\n\nFrom [1] (section \"What about file.encoding?\") I understand that the file.encoding system property doesn\u0027t have any effect on the encoding of file names. [1] says that this is rather controlled via the LANG and LC_CTYPE environment variables. So I\u0027ve tried this:\n\n  $ bazel test //plugins/code-owners/... --test_env\u003dLANG\u003den_US.iso88591 --test_env\u003dLC_CTYPE\u003dUTF-8\n\nbut still no success. At this point I\u0027m punting on this, as supporting unicode characters in file names is not of high prio for us.\n\nAs a mitigation I\u0027ve implemented [2] for now.\n\n[1] https://jonisalonen.com/2012/java-and-file-names-with-invalid-characters/ \n[2] https://gerrit-review.googlesource.com/c/plugins/code-owners/+/293625",
      "parentUuid": "4588ce78_e812f7e0",
      "revId": "8f81a650c0021381d00fffcb0b7c7d9e0e8917c6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "380a52de_6cd8ffea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-01-13T09:31:26Z",
      "side": 1,
      "message": "Thanks for update, Edwin. Still, it would be interesting to try to understand, why the test is passing in Eclipse. Can it be, that some other properties are set in Eclipse? May be just dump them all and compare with the ones from Bazel environment?",
      "parentUuid": "8a14360a_3fb210af",
      "revId": "8f81a650c0021381d00fffcb0b7c7d9e0e8917c6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8198f6a2_66c75fea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-01-13T09:34:23Z",
      "side": 1,
      "message": "Thanks, this is a good idea. Will try this later.",
      "parentUuid": "380a52de_6cd8ffea",
      "revId": "8f81a650c0021381d00fffcb0b7c7d9e0e8917c6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adf48055_cc3946b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-01-14T12:25:15Z",
      "side": 1,
      "message": "This helped!\n\nRunning the tests with\n\n  $ bazel test //plugins/code-owners/... --test_env\u003dLANG\u003den_US.UTF-8\n\nmakes them succeed.\n\nIs there a way to set this test_env within a BUILD file?",
      "parentUuid": "8198f6a2_66c75fea",
      "revId": "8f81a650c0021381d00fffcb0b7c7d9e0e8917c6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a8379b2_9dab5eaa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-01-14T12:41:08Z",
      "side": 1,
      "message": "See: [1]. We do have already:\n\n  build --action_env\u003dPATH\n\nYou could add to gerrit-owkrspace/.bazelrc something like:\n\n  --test_env\u003dLANG\n\nWould this help?\n\n[1] https://bazel.build/designs/2016/06/21/environment.html",
      "parentUuid": "adf48055_cc3946b6",
      "revId": "8f81a650c0021381d00fffcb0b7c7d9e0e8917c6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}