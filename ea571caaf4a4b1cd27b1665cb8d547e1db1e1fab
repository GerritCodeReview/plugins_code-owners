{
  "comments": [
    {
      "key": {
        "uuid": "99b94105_52a3d30d",
        "filename": "java/com/google/gerrit/plugins/codeowners/restapi/AbstractGetCodeOwnersForPath.java",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-09-30T14:20:31Z",
      "side": 1,
      "message": "aren\u0027t you potentially adding more than the limit here?",
      "range": {
        "startLine": 148,
        "startChar": 17,
        "endLine": 148,
        "endChar": 23
      },
      "revId": "ea571caaf4a4b1cd27b1665cb8d547e1db1e1fab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90eb725f_3fa41c0e",
        "filename": "java/com/google/gerrit/plugins/codeowners/restapi/AbstractGetCodeOwnersForPath.java",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-09-30T14:29:17Z",
      "side": 1,
      "message": "maybe for such a case you would want to randomize the returned global code owners, or choose ordering for them to be returned based on some scoring (maybe even delegate to \"suggest reviewers\" and take some combination, but that probably has some latency issues).",
      "parentUuid": "99b94105_52a3d30d",
      "range": {
        "startLine": 148,
        "startChar": 17,
        "endLine": 148,
        "endChar": 23
      },
      "revId": "ea571caaf4a4b1cd27b1665cb8d547e1db1e1fab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69e83ee6_bd262f01",
        "filename": "java/com/google/gerrit/plugins/codeowners/restapi/AbstractGetCodeOwnersForPath.java",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-10-01T08:33:03Z",
      "side": 1,
      "message": "Limiting, randomising and sorting is already handled below by the sortAndLimit call in line 154 :)\n\nHowever by not setting any distance score for global code owners, by default we used 0 as distance score for them. This is the same distance score that we use for code owners that are defined in the root folder and hence the order between root owners and global owners was random. To make sure that root owners are always returned before global owners, I\u0027ve increased the max distance range by 1 now, so that global code owners get 0 and root code owners get 1, and the order between them is fixed now.",
      "parentUuid": "90eb725f_3fa41c0e",
      "range": {
        "startLine": 148,
        "startChar": 17,
        "endLine": 148,
        "endChar": 23
      },
      "revId": "ea571caaf4a4b1cd27b1665cb8d547e1db1e1fab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10890adb_c8d7854d",
        "filename": "java/com/google/gerrit/plugins/codeowners/restapi/AbstractGetCodeOwnersForPath.java",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-10-01T08:43:51Z",
      "side": 1,
      "message": "ah, I see, this conditional is just not needed then, maybe just remove it?\nI don\u0027t think the efficiency improvement is significant with this conditional.",
      "parentUuid": "69e83ee6_bd262f01",
      "range": {
        "startLine": 148,
        "startChar": 17,
        "endLine": 148,
        "endChar": 23
      },
      "revId": "ea571caaf4a4b1cd27b1665cb8d547e1db1e1fab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "046d5414_3b2d6bf7",
        "filename": "java/com/google/gerrit/plugins/codeowners/restapi/AbstractGetCodeOwnersForPath.java",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-10-01T08:45:30Z",
      "side": 1,
      "message": "referring to the condition:\n    if (codeOwners.size() \u003c limit)",
      "parentUuid": "10890adb_c8d7854d",
      "range": {
        "startLine": 148,
        "startChar": 17,
        "endLine": 148,
        "endChar": 23
      },
      "revId": "ea571caaf4a4b1cd27b1665cb8d547e1db1e1fab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0fd7996_bc51f21a",
        "filename": "java/com/google/gerrit/plugins/codeowners/restapi/AbstractGetCodeOwnersForPath.java",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-10-01T09:05:12Z",
      "side": 1,
      "message": "Good question. For getting the global code owners we need to load the code-owners.config file of this project, and of all its parent projects until we find the corresponding config key being set. Normally this should be cheap since the content of the config files are cached in the project cache, but these are unneeded cache accesses and there could be cache misses. After reading the config we still need to resolve the emails to accounts which is done via the external ID cache. Since this is doing quite some things, I think I would just keep this condition here, but I agree that it probably wouldn\u0027t hurt much to drop it.",
      "parentUuid": "046d5414_3b2d6bf7",
      "range": {
        "startLine": 148,
        "startChar": 17,
        "endLine": 148,
        "endChar": 23
      },
      "revId": "ea571caaf4a4b1cd27b1665cb8d547e1db1e1fab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24722e76_9d006418",
        "filename": "javatests/com/google/gerrit/plugins/codeowners/acceptance/api/AbstractGetCodeOwnersForPathIT.java",
        "patchSetId": 1
      },
      "lineNbr": 634,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-09-30T14:20:31Z",
      "side": 1,
      "message": "A test to ensure you don\u0027t return more than the limit could help here.",
      "revId": "ea571caaf4a4b1cd27b1665cb8d547e1db1e1fab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80145c50_8d490a4d",
        "filename": "javatests/com/google/gerrit/plugins/codeowners/acceptance/api/AbstractGetCodeOwnersForPathIT.java",
        "patchSetId": 1
      },
      "lineNbr": 634,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-10-01T08:33:03Z",
      "side": 1,
      "message": "Good point. Done.",
      "parentUuid": "24722e76_9d006418",
      "revId": "ea571caaf4a4b1cd27b1665cb8d547e1db1e1fab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}