{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "90aea5e7_8f7d128a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-09-24T12:44:20Z",
      "side": 1,
      "message": "I think you can do better here:\nTake the code that is heavy (computes owned paths etc) and make that code be async. It can compute all the things you need and give that as input to BatchUpdateOp. I think it translates to just taking the computing of \"String message \u003d \" and doing that part async.\n\nThen, the batchUpdate.execute() call should be in a single thread to avoid the errors.\n\nDoes it make sense?",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 21,
        "endChar": 0
      },
      "revId": "b6a6a6f88d35eccdea4cb82b39a5b16fbd99bf0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "890b32a8_fe891667",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-09-27T07:03:11Z",
      "side": 1,
      "message": "I\u0027m afraid I\u0027m not following. \n\n\u003e Take the code that is heavy (computes owned paths etc) and make that code be\n\u003e async. It can compute all the things you need and give that as input to\n\u003e BatchUpdateOp. \n\nThe BatchUpdateOp can only post the message, once the async operation that computes the owned path is finished. So it would need to wait for it to complete. So latency-wise that\u0027s the same as computing it synchronously, isn\u0027t it?",
      "parentUuid": "90aea5e7_8f7d128a",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 21,
        "endChar": 0
      },
      "revId": "b6a6a6f88d35eccdea4cb82b39a5b16fbd99bf0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "122e6a73_11a1ffc1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-09-28T07:44:38Z",
      "side": 1,
      "message": "Marking as revolved.",
      "parentUuid": "890b32a8_fe891667",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 21,
        "endChar": 0
      },
      "revId": "b6a6a6f88d35eccdea4cb82b39a5b16fbd99bf0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f009e3fc_9c7bbccf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-09-24T11:41:03Z",
      "side": 1,
      "message": "Verifying this manually since it only works with this open change in Gerrit core:\nhttps://gerrit-review.googlesource.com/c/gerrit/+/318857",
      "revId": "b6a6a6f88d35eccdea4cb82b39a5b16fbd99bf0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37a77eeb_d306fae4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-09-24T11:41:25Z",
      "side": 1,
      "message": "Verifying this manually since it only works with this open change in Gerrit core:\nhttps://gerrit-review.googlesource.com/c/gerrit/+/318857",
      "revId": "b6a6a6f88d35eccdea4cb82b39a5b16fbd99bf0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b817761_86650a3d",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnersOnAddReviewer.java",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-09-27T09:48:42Z",
      "side": 1,
      "message": "I found this is only used by the index package/operations. Could this operation overload the indexing executor threads?",
      "range": {
        "startLine": 77,
        "startChar": 7,
        "endLine": 77,
        "endChar": 20
      },
      "revId": "b6a6a6f88d35eccdea4cb82b39a5b16fbd99bf0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "120865b6_f4207bd5",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnersOnAddReviewer.java",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-09-27T14:00:11Z",
      "side": 1,
      "message": "Good catch!! You are right that IndexExecutor should only be used for indexing. I\u0027ll rewrite this to use WorkQueue instead.",
      "parentUuid": "4b817761_86650a3d",
      "range": {
        "startLine": 77,
        "startChar": 7,
        "endLine": 77,
        "endChar": 20
      },
      "revId": "b6a6a6f88d35eccdea4cb82b39a5b16fbd99bf0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53d07c9e_7f92ef73",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnersOnAddReviewer.java",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-09-28T07:44:38Z",
      "side": 1,
      "message": "Done with the new patch set.\n\nWhen switching to use WorkQueue I realised that the async posting of the change message did actually not work since I forgot to open a request context in the background thread. This is fixed now too, and covered by a test.",
      "parentUuid": "120865b6_f4207bd5",
      "range": {
        "startLine": 77,
        "startChar": 7,
        "endLine": 77,
        "endChar": 20
      },
      "revId": "b6a6a6f88d35eccdea4cb82b39a5b16fbd99bf0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}