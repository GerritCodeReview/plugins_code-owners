{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f007ca98_439cb72a",
        "filename": "web/code-owners-model-mixin.ts",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2025-04-24T14:46:50Z",
      "side": 1,
      "message": "Do you know why this is required in this change?",
      "revId": "8c44ef0352fa0ab15ad6fe3d64ea967e69e7cee9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef24f7fb_f0f44c3f",
        "filename": "web/code-owners-model-mixin.ts",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2025-04-24T14:49:26Z",
      "side": 1,
      "message": "Yeh, the updated https://www.npmjs.com/package/@rollup/plugin-node-resolve plugin now looks inside package.json and uses that as a reference. It looks at the exports field. I had debugged this ages ago so i don\u0027t remember the full details (i fixed gerrit core codebase).\n\n```\n  \"exports\": {\n    \".\": {\n      \"types\": \"./development/index.d.ts\",\n      \"default\": \"./index.js\"\n    },\n    \"./async-directive.js\": {\n      \"types\": \"./development/async-directive.d.ts\",\n      \"default\": \"./async-directive.js\"\n    },\n    \"./decorators.js\": {\n      \"types\": \"./development/decorators.d.ts\",\n      \"default\": \"./decorators.js\"\n    },\n    \"./decorators/custom-element.js\": {\n      \"types\": \"./development/decorators/custom-element.d.ts\",\n      \"default\": \"./decorators/custom-element.js\"\n    },\n    \"./decorators/event-options.js\": {\n      \"types\": \"./development/decorators/event-options.d.ts\",\n      \"default\": \"./decorators/event-options.js\"\n    },\n    \"./decorators/property.js\": {\n      \"types\": \"./development/decorators/property.d.ts\",\n      \"default\": \"./decorators/property.js\"\n    },\n    \"./decorators/query-all.js\": {\n      \"types\": \"./development/decorators/query-all.d.ts\",\n      \"default\": \"./decorators/query-all.js\"\n    },\n    \"./decorators/query-assigned-elements.js\": {\n      \"types\": \"./development/decorators/query-assigned-elements.d.ts\",\n      \"default\": \"./decorators/query-assigned-elements.js\"\n    },\n    \"./decorators/query-assigned-nodes.js\": {\n      \"types\": \"./development/decorators/query-assigned-nodes.d.ts\",\n      \"default\": \"./decorators/query-assigned-nodes.js\"\n    },\n    \"./decorators/query-async.js\": {\n      \"types\": \"./development/decorators/query-async.d.ts\",\n      \"default\": \"./decorators/query-async.js\"\n    },\n    \"./decorators/query.js\": {\n      \"types\": \"./development/decorators/query.d.ts\",\n      \"default\": \"./decorators/query.js\"\n    },\n    \"./decorators/state.js\": {\n      \"types\": \"./development/decorators/state.d.ts\",\n      \"default\": \"./decorators/state.js\"\n    },\n    \"./directive-helpers.js\": {\n      \"types\": \"./development/directive-helpers.d.ts\",\n      \"default\": \"./directive-helpers.js\"\n    },\n    \"./directive.js\": {\n      \"types\": \"./development/directive.d.ts\",\n      \"default\": \"./directive.js\"\n    },\n    \"./directives/async-append.js\": {\n      \"types\": \"./development/directives/async-append.d.ts\",\n      \"default\": \"./directives/async-append.js\"\n    },\n    \"./directives/async-replace.js\": {\n      \"types\": \"./development/directives/async-replace.d.ts\",\n      \"default\": \"./directives/async-replace.js\"\n    },\n    \"./directives/cache.js\": {\n      \"types\": \"./development/directives/cache.d.ts\",\n      \"default\": \"./directives/cache.js\"\n    },\n    \"./directives/choose.js\": {\n      \"types\": \"./development/directives/choose.d.ts\",\n      \"default\": \"./directives/choose.js\"\n    },\n    \"./directives/class-map.js\": {\n      \"types\": \"./development/directives/class-map.d.ts\",\n      \"default\": \"./directives/class-map.js\"\n    },\n    \"./directives/guard.js\": {\n      \"types\": \"./development/directives/guard.d.ts\",\n      \"default\": \"./directives/guard.js\"\n    },\n    \"./directives/if-defined.js\": {\n      \"types\": \"./development/directives/if-defined.d.ts\",\n      \"default\": \"./directives/if-defined.js\"\n    },\n    \"./directives/join.js\": {\n      \"types\": \"./development/directives/join.d.ts\",\n      \"default\": \"./directives/join.js\"\n    },\n    \"./directives/keyed.js\": {\n      \"types\": \"./development/directives/keyed.d.ts\",\n      \"default\": \"./directives/keyed.js\"\n    },\n    \"./directives/live.js\": {\n      \"types\": \"./development/directives/live.d.ts\",\n      \"default\": \"./directives/live.js\"\n    },\n    \"./directives/map.js\": {\n      \"types\": \"./development/directives/map.d.ts\",\n      \"default\": \"./directives/map.js\"\n    },\n    \"./directives/range.js\": {\n      \"types\": \"./development/directives/range.d.ts\",\n      \"default\": \"./directives/range.js\"\n    },\n    \"./directives/ref.js\": {\n      \"types\": \"./development/directives/ref.d.ts\",\n      \"default\": \"./directives/ref.js\"\n    },\n    \"./directives/repeat.js\": {\n      \"types\": \"./development/directives/repeat.d.ts\",\n      \"default\": \"./directives/repeat.js\"\n    },\n    \"./directives/style-map.js\": {\n      \"types\": \"./development/directives/style-map.d.ts\",\n      \"default\": \"./directives/style-map.js\"\n    },\n    \"./directives/template-content.js\": {\n      \"types\": \"./development/directives/template-content.d.ts\",\n      \"default\": \"./directives/template-content.js\"\n    },\n    \"./directives/unsafe-html.js\": {\n      \"types\": \"./development/directives/unsafe-html.d.ts\",\n      \"default\": \"./directives/unsafe-html.js\"\n    },\n    \"./directives/unsafe-mathml.js\": {\n      \"types\": \"./development/directives/unsafe-mathml.d.ts\",\n      \"default\": \"./directives/unsafe-mathml.js\"\n    },\n    \"./directives/unsafe-svg.js\": {\n      \"types\": \"./development/directives/unsafe-svg.d.ts\",\n      \"default\": \"./directives/unsafe-svg.js\"\n    },\n    \"./directives/until.js\": {\n      \"types\": \"./development/directives/until.d.ts\",\n      \"default\": \"./directives/until.js\"\n    },\n    \"./directives/when.js\": {\n      \"types\": \"./development/directives/when.d.ts\",\n      \"default\": \"./directives/when.js\"\n    },\n    \"./html.js\": {\n      \"types\": \"./development/html.d.ts\",\n      \"default\": \"./html.js\"\n    },\n    \"./polyfill-support.js\": {\n      \"types\": \"./development/polyfill-support.d.ts\",\n      \"default\": \"./polyfill-support.js\"\n    },\n    \"./static-html.js\": {\n      \"types\": \"./development/static-html.d.ts\",\n      \"default\": \"./static-html.js\"\n    }\n  },\n```\n\nSpecifically:\n\n```\n    \"./decorators.js\": {\n      \"types\": \"./development/decorators.d.ts\",\n      \"default\": \"./decorators.js\"\n    },\n```",
      "parentUuid": "f007ca98_439cb72a",
      "revId": "8c44ef0352fa0ab15ad6fe3d64ea967e69e7cee9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"],"atomExplanations":{"value":{"label:Code-Review=MAX,user=non_uploader":"","label:Code-Review=MIN":""}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8c44ef0352fa0ab15ad6fe3d64ea967e69e7cee9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""],"atomExplanations":{"value":{"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\"":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8c44ef0352fa0ab15ad6fe3d64ea967e69e7cee9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"],"atomExplanations":{"value":{"has:unresolved":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "patchSetCommitId": "8c44ef0352fa0ab15ad6fe3d64ea967e69e7cee9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"],"atomExplanations":{"value":{"is:review-enforced_gerrit":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8c44ef0352fa0ab15ad6fe3d64ea967e69e7cee9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"],"atomExplanations":{"value":{"branch:refs/meta/config":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"],"atomExplanations":{"value":{"label:Verified=MAX":"","label:Verified=MIN":""}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8c44ef0352fa0ab15ad6fe3d64ea967e69e7cee9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Want-Code-Review-From-All",
        "description": {
          "value": "A \u0027Code-Review\u0027 vote is required from all human reviewers (service users that are reviewers are ignored)."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "footer:\"Want-Code-Review: all\" -label:Code-Review\u003e\u003d1,users\u003dhuman_reviewers"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003e\u003d1,users\u003dhuman_reviewers"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"footer:\"Want-Code-Review: all\" -label:Code-Review>=1,users=human_reviewers"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Code-Review>=1,users=human_reviewers"],"failingAtoms":["footer:\"Want-Code-Review: all\""],"atomExplanations":{"value":{"footer:\"Want-Code-Review: all\"":"","label:Code-Review>=1,users=human_reviewers":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review>=1,users=human_reviewers"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8c44ef0352fa0ab15ad6fe3d64ea967e69e7cee9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}