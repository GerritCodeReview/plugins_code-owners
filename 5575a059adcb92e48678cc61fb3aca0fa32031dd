{
  "comments": [
    {
      "key": {
        "uuid": "f0968463_94c4dda1",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerConfig.java",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-05-26T12:07:14Z",
      "side": 1,
      "message": "This is noble, but hard. For example, what if a new syntax wants to use groups. Would it have to resolve members before constructing the config or extend CodeOwnerReference to be either a group or a single user?",
      "range": {
        "startLine": 29,
        "startChar": 6,
        "endLine": 30,
        "endChar": 82
      },
      "revId": "5575a059adcb92e48678cc61fb3aca0fa32031dd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92f46770_a8ac867e",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerConfig.java",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-05-27T09:57:37Z",
      "side": 1,
      "message": "The initial version of this plugin will not support groups as code owners.\n\nWhen we want to support groups, we will support it generically and backends can choose to implement groups or not. \n\nFor this abstraction we intent to cover groups via CodeOwnerReference, by allowing CodeOwnerReference to contain a group UUID or group name, instead of an account email.",
      "parentUuid": "f0968463_94c4dda1",
      "range": {
        "startLine": 29,
        "startChar": 6,
        "endLine": 30,
        "endChar": 82
      },
      "revId": "5575a059adcb92e48678cc61fb3aca0fa32031dd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcb96628_191c259a",
        "filename": "java/com/google/gerrit/plugins/codeowners/testing/CodeOwnerConfigSubject.java",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-05-26T12:07:14Z",
      "side": 1,
      "message": "Nice!",
      "revId": "5575a059adcb92e48678cc61fb3aca0fa32031dd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2488339_3dc13005",
        "filename": "javatests/com/google/gerrit/plugins/codeowners/backend/CodeOwnerConfigTest.java",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-05-26T12:07:14Z",
      "side": 1,
      "message": "I guess you will check emails (instead of references) many times in many tests. Could make sense here to expose codeOwnersEmailsAsString (or whatever name) to avoid calling CodeOwnerReference.create on all assertions\n\nI see you have hasCodeOwnersEmailsThat. Maybe use that here?",
      "range": {
        "startLine": 63,
        "startChar": 31,
        "endLine": 63,
        "endChar": 41
      },
      "revId": "5575a059adcb92e48678cc61fb3aca0fa32031dd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31c64369_7e13d807",
        "filename": "javatests/com/google/gerrit/plugins/codeowners/backend/CodeOwnerConfigTest.java",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-05-27T09:57:37Z",
      "side": 1,
      "message": "Oh yes, just forgot to use it here too.\n\nDone.",
      "parentUuid": "f2488339_3dc13005",
      "range": {
        "startLine": 63,
        "startChar": 31,
        "endLine": 63,
        "endChar": 41
      },
      "revId": "5575a059adcb92e48678cc61fb3aca0fa32031dd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}