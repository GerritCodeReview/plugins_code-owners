{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ae2b9492_c0ddb6a5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-03-09T09:47:05Z",
      "side": 1,
      "message": "IIUC with this change your return:\n  * file: a/b/c/abc.txt\n  * accounts: [user_1, user_2, user_3]\n  * code-owner-file: [a/b/OWNERS, a/OWNERS]\n\nBut with this scheme, we can\u0027t associate which owner file caused which account to be added. To provide more visibility, why not return the code-owner file per suggested code-owner account?",
      "revId": "a9145b0ba7cd1df24b4c5867a6853d0acee923ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "024c3b13_b8b6f10b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-03-09T12:08:31Z",
      "side": 1,
      "message": "\u003e IIUC with this change your return:\n\u003e\n\u003e * file: a/b/c/abc.txt\n\u003e * accounts: [user_1, user_2, user_3]\n\u003e * code-owner-file: [a/b/OWNERS, a/OWNERS]\n\u003e\n\u003e But with this scheme, we can\u0027t associate which owner file caused which account\n\u003e to be added.\n\nYes, this is correct.\n\n\u003e To provide more visibility, why not return the code-owner file per suggested\n\u003e code-owner account?\n\nThe problem we are trying to solve here is this:\nA user that should be a code owner is not returned. To which OWNERS files can this user be added? E.g. if there are no code owners returned, we still want to know which files have been inspected.\n\nReturning for each suggested user the OWNERS file that made this user a code owner is also useful, but it is more difficult to implement. For your example we could easily tell if user_1 is a code owner through a/b/OWNERS or a/OWNERS but if a/b/OWNERS imports foo/OWNERS which imports bar/OWNERS we currently have no means to know if user_1 is a code owner through a/b/OWNERS, foo/OWNERS or bar/OWNERS.\n\nAnd even if we could tell, that it\u0027s bar/OWNERS which made user_1 a code owner, users would probably wonder why bar/OWNERS is relevant for file a/b/c/abc.txt. To understand this you need to know how bar/OWNERS was pulled in, which is the information that we provide with this change.\n\nSo I think returning for each suggested user the OWNERS file that made this user a code owner would be useful but we would still want to return the list of relevant files as implemented in this change.\n\nDoes this make sense?",
      "parentUuid": "ae2b9492_c0ddb6a5",
      "revId": "a9145b0ba7cd1df24b4c5867a6853d0acee923ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95da1aa8_42478fe9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-03-09T09:47:05Z",
      "side": 1,
      "message": "endpoints*",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 9
      },
      "revId": "a9145b0ba7cd1df24b4c5867a6853d0acee923ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ab12c3f_c8912c11",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-03-09T09:47:05Z",
      "side": 1,
      "message": "the*",
      "range": {
        "startLine": 13,
        "startChar": 52,
        "endLine": 13,
        "endChar": 56
      },
      "revId": "a9145b0ba7cd1df24b4c5867a6853d0acee923ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc8e0a30_ff420606",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-03-09T09:47:05Z",
      "side": 1,
      "message": "nit: long line. Please wrap.",
      "range": {
        "startLine": 21,
        "startChar": 68,
        "endLine": 21,
        "endChar": 73
      },
      "revId": "a9145b0ba7cd1df24b4c5867a6853d0acee923ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c982b01e_cc32dca1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-03-09T09:47:05Z",
      "side": 1,
      "message": "Are users free to add OWNERS.\u003canyText\u003e file that\u0027s parsed by Gerrit? Could you please add one sentence about it?",
      "range": {
        "startLine": 21,
        "startChar": 1,
        "endLine": 21,
        "endChar": 15
      },
      "revId": "a9145b0ba7cd1df24b4c5867a6853d0acee923ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc561a7e_db0cb3ea",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-03-09T09:47:05Z",
      "side": 1,
      "message": "Is it possible to have cyclic imports?",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 50
      },
      "revId": "a9145b0ba7cd1df24b4c5867a6853d0acee923ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1a8bdb3_d3825ff5",
        "filename": "java/com/google/gerrit/plugins/codeowners/api/CodeOwnerConfigFileInfo.java",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-03-09T09:47:05Z",
      "side": 1,
      "message": "[Optional] you could mention that this representation does not include owner file contents (i.e. usernames or other data). It only contains the file path and any imported files (if exists).",
      "revId": "a9145b0ba7cd1df24b4c5867a6853d0acee923ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c43d8a4_0699d6b3",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerResolverResult.java",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-03-09T09:47:05Z",
      "side": 1,
      "message": "This method is unused? Please delete.",
      "range": {
        "startLine": 113,
        "startChar": 40,
        "endLine": 113,
        "endChar": 51
      },
      "revId": "a9145b0ba7cd1df24b4c5867a6853d0acee923ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ab8b8b9_da193187",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/ImportedCodeOwnerConfig.java",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-03-09T09:47:05Z",
      "side": 1,
      "message": "nit: 2023",
      "range": {
        "startLine": 1,
        "startChar": 17,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "a9145b0ba7cd1df24b4c5867a6853d0acee923ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99ed2b61_74ef231a",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/ImportedCodeOwnerConfig.java",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-03-09T09:47:05Z",
      "side": 1,
      "message": "Does this entity contain actual users who are defined in the code owners config file? \n\n[Optional] If not, I think we can add a sentence about it in Javadocs.",
      "revId": "a9145b0ba7cd1df24b4c5867a6853d0acee923ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55322962_63dbd22e",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/UnresolvedImportFormatter.java",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-03-09T09:47:05Z",
      "side": 1,
      "message": "This is exact to CodeOwnerConfigFileJson#getBackend().\n\n[Optional] you can extract this method.",
      "revId": "a9145b0ba7cd1df24b4c5867a6853d0acee923ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f348ad7f_964ae63d",
        "filename": "java/com/google/gerrit/plugins/codeowners/restapi/CodeOwnerConfigFileJson.java",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-03-09T09:47:05Z",
      "side": 1,
      "message": "since we don\u0027t check on cycles here I assume it\u0027s done somewhere else? We can mention in the javadocs of this method that it\u0027s guaranteed that resolved and unresolved imports lists do not contain a cycle.",
      "revId": "a9145b0ba7cd1df24b4c5867a6853d0acee923ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "508844b8_6bee4eac",
        "filename": "javatests/com/google/gerrit/plugins/codeowners/backend/ImportedCodeOwnerConfigTest.java",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-03-09T09:47:05Z",
      "side": 1,
      "message": "nit: 2023*",
      "range": {
        "startLine": 1,
        "startChar": 17,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "a9145b0ba7cd1df24b4c5867a6853d0acee923ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}