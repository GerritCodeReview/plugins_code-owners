{
  "comments": [
    {
      "key": {
        "uuid": "6b8c5164_06b56efd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 12,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Will we allow both upwards and downwards path expressions? I guess upwards won\u0027t properly work with the current code as we would also need to do a downwards iteration into subfolders for it. If we don\u0027t allow upwards expressions, could we reject them on a higher level so that not every evaluator of path expressions has to remember that detail?\n\n(We don\u0027t need a solution for this in the current change. I\u0027m just asking so that this aspect is not forgotten. Sorry if there\u0027s another change which already addresses this aspect.)",
      "range": {
        "startLine": 12,
        "startChar": 24,
        "endLine": 12,
        "endChar": 64
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "280e5c99_c4ce12ec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 12,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T07:01:44Z",
      "side": 1,
      "message": "Can you help me understand what you mean by upward and downward path expressions?\n\nVia path expressions it should only be possible to match files inside the folder (including subdirs) in which the code owner config is defined, but not outside of it (parent folder, sibling folder). We don\u0027t have any validation of path expressions yet, but there will be some logic that prevents you from adding invalid or non-allowed path expressions (on upload and on submit check). Is this what you meant?",
      "parentUuid": "6b8c5164_06b56efd",
      "range": {
        "startLine": 12,
        "startChar": 24,
        "endLine": 12,
        "endChar": 64
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca37a7d6_b744b40b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 12,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-03T08:17:26Z",
      "side": 1,
      "message": "Yes, that validation logic is what I meant.\n\nWhat I mean with upward/downward expressions:\nGoing to parent or sibling folders would be upwards to me (e.g. ../*.txt or ../../another_folder/*). Downwards would be subfolders (e.g. subfolder/*.txt).\n\nIf we only support the current/subfolders in path expressions, it would be good to mention it in this change (even if we implement the validation later) as the implementation seems to be written with that assumption in mind which is a bit in contrast to the general descriptions regarding path expressions in this change.",
      "parentUuid": "280e5c99_c4ce12ec",
      "range": {
        "startLine": 12,
        "startChar": 24,
        "endLine": 12,
        "endChar": 64
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0fac9bd_68bc1a81",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 12,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Done, added a paragraph about this below.",
      "parentUuid": "ca37a7d6_b744b40b",
      "range": {
        "startLine": 12,
        "startChar": 24,
        "endLine": 12,
        "endChar": 64
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c46e15ac_3b67a12b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Typo: of",
      "range": {
        "startLine": 14,
        "startChar": 25,
        "endLine": 14,
        "endChar": 26
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdf0810a_eef51424",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c46e15ac_3b67a12b",
      "range": {
        "startLine": 14,
        "startChar": 25,
        "endLine": 14,
        "endChar": 26
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b811636_a7382b78",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 18,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Typo: set",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 4
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a92479db_6fa6490f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 18,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b811636_a7382b78",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 4
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "910e8cfd_e48c6049",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 20,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Typo: a",
      "range": {
        "startLine": 20,
        "startChar": 12,
        "endLine": 20,
        "endChar": 13
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ed89d78_14239f3c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 20,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "910e8cfd_e48c6049",
      "range": {
        "startLine": 20,
        "startChar": 12,
        "endLine": 20,
        "endChar": 13
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89d774b8_f71bbf58",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 42,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Is an ImmutableList\u003cCodeOwnerSet\u003e used in CodeOwnerConfig so that we can keep this order? If so, ImmutableSets should also keep the iteration order as far as I know.\n\nOr is the reason for choosing ImmutableList that we don\u0027t want to care about duplicate CodeOwnerSet entries?",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 42,
        "endChar": 28
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d9a6fd8_986fa26a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 42,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T07:01:44Z",
      "side": 1,
      "message": "My main concern was to keep the order as it is. I think I wasn\u0027t aware that ImmutableSets would keep the iteration order too.\n\nI\u0027m not sure yet what\u0027s best to do about duplicate CodeOwnerSets (whether to keep or drop them). For the MVP it\u0027s not important what we decide here, since we will not expose any REST endpoints to edit code owner configs nor do programmatic updates to them. For now writing code owner configs is only needed for tests and later we will also need it for the migration.\n\nDo you have thoughts on what\u0027s best to do with duplicate CodeOwnerSets? Given that ImmutableSets keep the iteration order we could just switch to use ImmutableSet for CodeOwnerSets.",
      "parentUuid": "89d774b8_f71bbf58",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 42,
        "endChar": 28
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1b67b74_20ebba51",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 42,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-03T08:17:26Z",
      "side": 1,
      "message": "I would drop duplicate CodeOwnerSets as we also drop duplicate code owners or path expressions within them.\n\nWe can also stay with ImmutableList now and simply switch later if we still want to. ImmutableList might make some of the tests easier as lists have a defined order by default so I\u0027m also fine if you want to concentrate on other implementation aspects first. Maybe we could just put a note somewhere what the intention was behind using a list (-\u003e the kept ordering) so that we don\u0027t have to remember at some point in the future what the original reasons were.",
      "parentUuid": "4d9a6fd8_986fa26a",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 42,
        "endChar": 28
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c24e578d_85c69cef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 42,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "I\u0027ve changed the storage of code owner sets in CodeOwnerConfig to ImmutableSet now so that duplicates are filtered out. Callers that need to be aware of the order (updates of code owner sets, test assertions) retrieve the code owner sets as list. See javadoc of the corresponding methods In CodeOwnerConfig.\n\nDone",
      "parentUuid": "e1b67b74_20ebba51",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 42,
        "endChar": 28
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9db07d1e_844c9e87",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T07:01:44Z",
      "side": 1,
      "message": "Thanks for your review comments. Looks like at the end of the MVP I will finally know all secrets about dealing with Truth :)",
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53f67d86_d7604e41",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerConfigUpdate.java",
        "patchSetId": 13
      },
      "lineNbr": 51,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Optional: Could be CodeOwnerSetsModification.keep().",
      "range": {
        "startLine": 51,
        "startChar": 38,
        "endLine": 51,
        "endChar": 68
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b219284_cae8fa42",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerConfigUpdate.java",
        "patchSetId": 13
      },
      "lineNbr": 51,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53f67d86_d7604e41",
      "range": {
        "startLine": 51,
        "startChar": 38,
        "endLine": 51,
        "endChar": 68
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "542ef529_d442b263",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerSet.java",
        "patchSetId": 13
      },
      "lineNbr": 66,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Typo: from",
      "range": {
        "startLine": 66,
        "startChar": 23,
        "endLine": 66,
        "endChar": 27
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a73cf96_c757621c",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerSet.java",
        "patchSetId": 13
      },
      "lineNbr": 66,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "542ef529_d442b263",
      "range": {
        "startLine": 66,
        "startChar": 23,
        "endLine": 66,
        "endChar": 27
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "511f9476_16af912a",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerSetModification.java",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "I like this idea very much. :-)",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 29,
        "endChar": 55
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9090907d_6fb09cf4",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerSetModification.java",
        "patchSetId": 13
      },
      "lineNbr": 96,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Typo: omit",
      "range": {
        "startLine": 96,
        "startChar": 17,
        "endLine": 96,
        "endChar": 22
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d24defb0_57eea0ac",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerSetModification.java",
        "patchSetId": 13
      },
      "lineNbr": 96,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9090907d_6fb09cf4",
      "range": {
        "startLine": 96,
        "startChar": 17,
        "endLine": 96,
        "endChar": 22
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84a41bdb_6f25d332",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerSetModification.java",
        "patchSetId": 13
      },
      "lineNbr": 110,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Typo: omit",
      "range": {
        "startLine": 110,
        "startChar": 17,
        "endLine": 110,
        "endChar": 22
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc0325d0_4b62a714",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerSetModification.java",
        "patchSetId": 13
      },
      "lineNbr": 110,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84a41bdb_6f25d332",
      "range": {
        "startLine": 110,
        "startChar": 17,
        "endLine": 110,
        "endChar": 22
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f8db196_64247bb0",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerSetModification.java",
        "patchSetId": 13
      },
      "lineNbr": 141,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Optional: Couldn\u0027t this simply be\n\n  addCodeOwner(codeOwnerReference)\n\n?",
      "range": {
        "startLine": 139,
        "startChar": 9,
        "endLine": 141,
        "endChar": 92
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "743504f9_b0d2a2b9",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerSetModification.java",
        "patchSetId": 13
      },
      "lineNbr": 141,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Oh yes.\n\nDone.",
      "parentUuid": "3f8db196_64247bb0",
      "range": {
        "startLine": 139,
        "startChar": 9,
        "endLine": 141,
        "endChar": 92
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06e97da0_08a7552b",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerSetModification.java",
        "patchSetId": 13
      },
      "lineNbr": 149,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Typo: omit",
      "range": {
        "startLine": 149,
        "startChar": 17,
        "endLine": 149,
        "endChar": 22
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5a7bee7_d659f6f0",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerSetModification.java",
        "patchSetId": 13
      },
      "lineNbr": 149,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06e97da0_08a7552b",
      "range": {
        "startLine": 149,
        "startChar": 17,
        "endLine": 149,
        "endChar": 22
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06d8ac61_8344edff",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerSetModification.java",
        "patchSetId": 13
      },
      "lineNbr": 163,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Typo: omit",
      "range": {
        "startLine": 163,
        "startChar": 17,
        "endLine": 163,
        "endChar": 22
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "600dab3f_13385deb",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/CodeOwnerSetModification.java",
        "patchSetId": 13
      },
      "lineNbr": 163,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06d8ac61_8344edff",
      "range": {
        "startLine": 163,
        "startChar": 17,
        "endLine": 163,
        "endChar": 22
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72a35d1b_1c67ce7e",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/findowners/FindOwnersCodeOwnerConfigParser.java",
        "patchSetId": 13
      },
      "lineNbr": 103,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "To avoid manifesting the list, then going back to a stream and generating the resulting list again, I\u0027d suggest that we collect all emails to a string with joining(\"\\n\") and append a \\n at the end if the string is not empty. (Why this works: joining(\"\\n\") will result in an empty string if the stream is empty.)",
      "range": {
        "startLine": 100,
        "startChar": 12,
        "endLine": 103,
        "endChar": 5
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3291ecec_ffba0401",
        "filename": "java/com/google/gerrit/plugins/codeowners/backend/findowners/FindOwnersCodeOwnerConfigParser.java",
        "patchSetId": 13
      },
      "lineNbr": 103,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Good idea. Done.",
      "parentUuid": "72a35d1b_1c67ce7e",
      "range": {
        "startLine": 100,
        "startChar": 12,
        "endLine": 103,
        "endChar": 5
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55f432fd_9a240d73",
        "filename": "java/com/google/gerrit/plugins/codeowners/testing/CodeOwnerConfigInfoSubject.java",
        "patchSetId": 13
      },
      "lineNbr": 61,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Optional: Not using check(..) here breaks Truth\u0027s failure message chain. If you didn\u0027t intend this, you could just switch to\n\n  check(\"codeOwnerSets().onlyElement()\")\n        .about(codeOwnerSetInfos())\n        .that(Iterables.getOnlyElement(codeOwnerConfigInfo().codeOwnerSets));\n\nand introduce this to CodeOwnerSetInfoSubject:\n\n    public static Factory\u003cCodeOwnerSetInfoSubject, CodeOwnerSetInfo\u003e codeOwnerSetInfos() {\n      return CodeOwnerSetInfoSubject::new;\n    }\n\n(Introducing those public factory methods and using check(..).about(..).that(..) is Truth\u0027s way for custom subject chains.)\n\nAnd if you don\u0027t want to even have the need to introduce methods such as hasExactlyOneXXXThat(), you could use this approach:\n\n  public ListSubject\u003cCodeOwnerSetInfoSubject, CodeOwnerSetInfo\u003e hasCodeOwnerSetsThat() {\n    return check(\"codeOwnerSets()\")\n        .about(elements())\n        .thatCustom(codeOwnerConfigInfo().codeOwnerSets, codeOwnerSetInfos());\n  }\n\nelements() comes from ListSubject. This implementation of hasCodeOwnerSetsThat() allows to write for example:\n\n      assertThat(codeOwnerConfigInfo)\n        .hasCodeOwnerSetsThat()\n        .onlyElement()\n        .hasCodeOwnersEmailsThat()\n        .containsExactly(admin.email());",
      "range": {
        "startLine": 60,
        "startChar": 11,
        "endLine": 61,
        "endChar": 71
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3a31ba1_6da62066",
        "filename": "java/com/google/gerrit/plugins/codeowners/testing/CodeOwnerConfigInfoSubject.java",
        "patchSetId": 13
      },
      "lineNbr": 61,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T07:01:44Z",
      "side": 1,
      "message": "Thanks a lot, I hoped that you would have a better suggestion for this. I will try out what you propose.",
      "parentUuid": "55f432fd_9a240d73",
      "range": {
        "startLine": 60,
        "startChar": 11,
        "endLine": 61,
        "endChar": 71
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d68e3c7b_452e0704",
        "filename": "java/com/google/gerrit/plugins/codeowners/testing/CodeOwnerConfigInfoSubject.java",
        "patchSetId": 13
      },
      "lineNbr": 61,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Done, I went with the second approach. Works like a charm.",
      "parentUuid": "b3a31ba1_6da62066",
      "range": {
        "startLine": 60,
        "startChar": 11,
        "endLine": 61,
        "endChar": 71
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "153591da_ff24efe0",
        "filename": "java/com/google/gerrit/plugins/codeowners/testing/CodeOwnerConfigInfoSubject.java",
        "patchSetId": 13
      },
      "lineNbr": 63,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Is this commented code and the todo removed in a follow-up change?",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 63,
        "endChar": 98
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30f70508_62438a88",
        "filename": "java/com/google/gerrit/plugins/codeowners/testing/CodeOwnerConfigInfoSubject.java",
        "patchSetId": 13
      },
      "lineNbr": 63,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T07:01:44Z",
      "side": 1,
      "message": "This is just garbage I forgot to remove. I actually thought that I did remove this and also addressed the todos. Maybe I accidentally did this in a follow-up change. But I\u0027m sure that even my revised code is not compliant with how this should be done in Truth.",
      "parentUuid": "153591da_ff24efe0",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 63,
        "endChar": 98
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "756f870d_d6c0f6e9",
        "filename": "java/com/google/gerrit/plugins/codeowners/testing/CodeOwnerConfigInfoSubject.java",
        "patchSetId": 13
      },
      "lineNbr": 63,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30f70508_62438a88",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 63,
        "endChar": 98
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "709ff55f_24c9c184",
        "filename": "java/com/google/gerrit/plugins/codeowners/testing/CodeOwnerConfigSubject.java",
        "patchSetId": 13
      },
      "lineNbr": 59,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Optional: See my other related comment on CodeOwnerConfigInfoSubject. The same aspects apply here.",
      "range": {
        "startLine": 59,
        "startChar": 29,
        "endLine": 59,
        "endChar": 58
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5725b472_9980b415",
        "filename": "java/com/google/gerrit/plugins/codeowners/testing/CodeOwnerConfigSubject.java",
        "patchSetId": 13
      },
      "lineNbr": 59,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "709ff55f_24c9c184",
      "range": {
        "startLine": 59,
        "startChar": 29,
        "endLine": 59,
        "endChar": 58
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ddcba1f3_9eb7e3c8",
        "filename": "java/com/google/gerrit/plugins/codeowners/testing/CodeOwnerSetSubject.java",
        "patchSetId": 13
      },
      "lineNbr": 61,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-07-02T18:12:35Z",
      "side": 1,
      "message": "Optional: As a result of my other messages, this method might go away. If we still need it afterwards, we should consider to switch to a different style as we wouldn\u0027t want to introduce an assertWithMessage() to every custom subject. Truth\u0027s standard solution is this:\n- Expose a factory method for the custom subject type (see below).\n- Callers which want to set a custom message would use Truth.assertWithMessage(message, args).about(codeOwnerSetSubjects()).that(codeOwnerSet) for assertions.\n\nThe public factory method has many usages as you might see from my other comments so adding it is generally a good idea even if it is only used in the assertThat(..) method in the beginning.\n\nFactory method example:\n\n  public static Factory\u003cCodeOwnerSetSubject, CodeOwnerSet\u003e codeOwnerSetSubjects() {\n    return CodeOwnerSetSubject::new;\n  }",
      "range": {
        "startLine": 61,
        "startChar": 36,
        "endLine": 61,
        "endChar": 53
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "842b7f09_6b92c7c1",
        "filename": "java/com/google/gerrit/plugins/codeowners/testing/CodeOwnerSetSubject.java",
        "patchSetId": 13
      },
      "lineNbr": 61,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T07:01:44Z",
      "side": 1,
      "message": "Thanks. This is good to know even if this method will no longer be needed. I was wondering if there was a better way to do this.",
      "parentUuid": "ddcba1f3_9eb7e3c8",
      "range": {
        "startLine": 61,
        "startChar": 36,
        "endLine": 61,
        "endChar": 53
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca651461_9e0bdba3",
        "filename": "java/com/google/gerrit/plugins/codeowners/testing/CodeOwnerSetSubject.java",
        "patchSetId": 13
      },
      "lineNbr": 61,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-07-03T11:33:21Z",
      "side": 1,
      "message": "As expected this method is no longer needed after the other comments have been addressed.",
      "parentUuid": "842b7f09_6b92c7c1",
      "range": {
        "startLine": 61,
        "startChar": 36,
        "endLine": 61,
        "endChar": 53
      },
      "revId": "46ebaeb854bdfecb6e2f0befa82c4130e571dd3b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}