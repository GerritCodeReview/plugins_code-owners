{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "59eb09b4_af979f5c",
        "filename": "java/com/google/gerrit/plugins/codeowners/api/BranchCodeOwnersImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-01-11T12:33:43Z",
      "side": 1,
      "message": "This looks a bit unconventional. Can you return CodeOwnerCheckInfo here?",
      "range": {
        "startLine": 90,
        "startChar": 9,
        "endLine": 90,
        "endChar": 30
      },
      "revId": "eece03801a5f23b859cb9064aafa905fda889000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "852bdfd3_f5c0f608",
        "filename": "java/com/google/gerrit/plugins/codeowners/api/BranchCodeOwnersImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-01-11T14:24:20Z",
      "side": 1,
      "message": "Actually this follows a pattern that we use in many places already.\nE.g. in this class see line 66 above, but also in Gerrit core (e.g. ChangesImpl#query(String) which returns QueryRequest, or AccountsImpl#suggestAccounts() which returns SuggestAccountsRequest).\n\nWe return a request object rather than an info object so that the caller can specify the parameters on the request before executing the request (email, path, user in this case). This way we have a fluent API for creating the request. If we would want to return an info object we would need to accept all possible parameters as nullable method arguments. That would not only be less comfortable, but also any addition of a new parameter would break the backwards compatibility of the API.",
      "parentUuid": "59eb09b4_af979f5c",
      "range": {
        "startLine": 90,
        "startChar": 9,
        "endLine": 90,
        "endChar": 30
      },
      "revId": "eece03801a5f23b859cb9064aafa905fda889000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c3330d2_a48d6d11",
        "filename": "java/com/google/gerrit/plugins/codeowners/api/CodeOwnerCheckInfo.java",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-01-11T12:33:43Z",
      "side": 1,
      "message": "these Booleans are always set, right?\nIf that\u0027s the case it is better to use boolean (not Boolean).",
      "range": {
        "startLine": 39,
        "startChar": 9,
        "endLine": 39,
        "endChar": 16
      },
      "revId": "eece03801a5f23b859cb9064aafa905fda889000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d372c23c_9ca63899",
        "filename": "java/com/google/gerrit/plugins/codeowners/api/CodeOwnerCheckInfo.java",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-01-11T14:24:20Z",
      "side": 1,
      "message": "Yes. Done.",
      "parentUuid": "0c3330d2_a48d6d11",
      "range": {
        "startLine": 39,
        "startChar": 9,
        "endLine": 39,
        "endChar": 16
      },
      "revId": "eece03801a5f23b859cb9064aafa905fda889000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c67371d_6764afc9",
        "filename": "java/com/google/gerrit/plugins/codeowners/restapi/CheckCodeOwner.java",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-01-11T12:33:43Z",
      "side": 1,
      "message": "export to private method isGlobalCodeOwner()\n(messages can probably just be a class variable)",
      "range": {
        "startLine": 172,
        "startChar": 32,
        "endLine": 181,
        "endChar": 5
      },
      "revId": "eece03801a5f23b859cb9064aafa905fda889000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c666c8d0_3f1a6ad4",
        "filename": "java/com/google/gerrit/plugins/codeowners/restapi/CheckCodeOwner.java",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-01-11T14:24:20Z",
      "side": 1,
      "message": "Hmm, I\u0027m not a fan of using class variables to collect information in private methods. If we want to move all of this into a method, we would also need isCodeOwnershipAssignedToEmail as a class variable in addition to messages. I would rather not do this, but I extracted part of this into a private method.",
      "parentUuid": "4c67371d_6764afc9",
      "range": {
        "startLine": 172,
        "startChar": 32,
        "endLine": 181,
        "endChar": 5
      },
      "revId": "eece03801a5f23b859cb9064aafa905fda889000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ada628a4_ce52945e",
        "filename": "java/com/google/gerrit/plugins/codeowners/restapi/CheckCodeOwner.java",
        "patchSetId": 4
      },
      "lineNbr": 199,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-01-11T12:33:43Z",
      "side": 1,
      "message": "export to method isResolvable()",
      "range": {
        "startLine": 183,
        "startChar": 27,
        "endLine": 199,
        "endChar": 7
      },
      "revId": "eece03801a5f23b859cb9064aafa905fda889000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41a1cee5_ea5e8910",
        "filename": "java/com/google/gerrit/plugins/codeowners/restapi/CheckCodeOwner.java",
        "patchSetId": 4
      },
      "lineNbr": 199,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-01-11T14:24:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ada628a4_ce52945e",
      "range": {
        "startLine": 183,
        "startChar": 27,
        "endLine": 199,
        "endChar": 7
      },
      "revId": "eece03801a5f23b859cb9064aafa905fda889000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3199468_faa9774b",
        "filename": "java/com/google/gerrit/plugins/codeowners/restapi/CheckCodeOwner.java",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-01-11T12:33:43Z",
      "side": 1,
      "message": "is this useful? This doesn\u0027t provide any new information.",
      "range": {
        "startLine": 203,
        "startChar": 0,
        "endLine": 208,
        "endChar": 0
      },
      "revId": "eece03801a5f23b859cb9064aafa905fda889000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbbc9989_531b4384",
        "filename": "java/com/google/gerrit/plugins/codeowners/restapi/CheckCodeOwner.java",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-01-11T14:24:20Z",
      "side": 1,
      "message": "Yeah, it\u0027s more of a summary in the debug log.\nI added it to prevent that users are misreading the debug log, but I agree it\u0027s not really needed. Dropped it.",
      "parentUuid": "b3199468_faa9774b",
      "range": {
        "startLine": 203,
        "startChar": 0,
        "endLine": 208,
        "endChar": 0
      },
      "revId": "eece03801a5f23b859cb9064aafa905fda889000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}